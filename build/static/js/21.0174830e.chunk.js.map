{"version":3,"sources":["Helpers/Validation.js","../node_modules/reactstrap/es/Button.js","component/Alert.js","views/Pages/ForgotPassword/ForgotPassword.js"],"names":["checkRequiredValidationWithMinMax","text","field","min","max","required","error","length","checkEmailValidation","emailText","name","pattern","test","checkEmptyValidation","undefined","_excluded","propTypes","active","PropTypes","bool","string","block","color","disabled","outline","tag","tagPropType","innerRef","oneOfType","object","func","onClick","size","children","node","className","cssModule","close","Button","_React$Component","props","_this","call","this","bind","_assertThisInitialized","_inheritsLoose","_proto","prototype","e","preventDefault","render","_this$props","ariaLabel","Tag","attributes","_objectWithoutPropertiesLoose","React","createElement","btnOutlineColor","classes","mapToCssModules","classNames","href","defaultAriaLabel","_extends","type","ref","Component","defaultProps","connect","state","alerts","alert","deleteAlert","map","alertType","msg","id","ForgotPassword","onInputChange","setState","target","value","onFormSubmit","a","email","errors","validationFlag","error_email","forgotPassword","auth","isAuthenticated","loading","to","md","onSubmit","addonType","placeholder","autoComplete","onChange","xs","style","width","setAlert"],"mappings":"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","file":"static/js/21.0174830e.chunk.js","sourcesContent":["export const checkRequiredValidationWithMinMax = (\r\n  text,\r\n  field,\r\n  min,\r\n  max,\r\n  required = true\r\n) => {\r\n  let error = \"\";\r\n  if (required === true) {\r\n    if (text === \"\") {\r\n      return (error = `${field} field is required`);\r\n    }\r\n  }\r\n  if (text.length < min) {\r\n    error = `${field} must be greater then ` + min + \" characters\";\r\n  }\r\n  if (text.length > max) {\r\n    error = `${field} field must be less then ` + max + \" characters\";\r\n  }\r\n  return error;\r\n};\r\n\r\nexport const validURL = (str) => {\r\n  var pattern = new RegExp(\r\n    \"^(https?:\\\\/\\\\/)?\" + // protocol\r\n      \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|\" + // domain name\r\n      \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\r\n      \"(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*\" + // port and path\r\n      \"(\\\\?[;&a-z\\\\d%_.~+=-]*)?\" + // query string\r\n      \"(\\\\#[-a-z\\\\d_]*)?$\",\r\n    \"i\"\r\n  ); // fragment locator\r\n  let error = \"\";\r\n  const isValid = !!pattern.test(str);\r\n  if (!isValid) {\r\n    error = \"Please enter a valid URL\";\r\n  }\r\n\r\n  return error;\r\n};\r\nexport const checkEmailValidation = (emailText, name, required = true) => {\r\n  let error = \"\";\r\n\r\n  if (required === true) {\r\n    if (emailText === \"\") {\r\n      return (error = `${name} field is required`);\r\n    }\r\n  }\r\n\r\n  const pattern =\r\n    /^[a-zA-Z0-9_]+(\\.[a-zA-Z0-9_]+)*@[a-z0-9]+([a-z0-9]+)*(\\.[a-z0-9]+([a-z0-9]+)*)*\\.[a-z]{2,4}$/;\r\n  if (pattern.test(emailText)) {\r\n    return \"\";\r\n  } else {\r\n    error = \"Enter a valid email: \" + emailText;\r\n  }\r\n  return error;\r\n};\r\n\r\nexport const checkMultipleChekboxSelectionWithMinMax = (\r\n  array,\r\n  min = 0,\r\n  max = 10000000\r\n) => {\r\n  let ids = [];\r\n  array.forEach((element, index) => {\r\n    if (element === true) {\r\n      ids.push(index);\r\n    }\r\n  });\r\n  let response = {};\r\n  response.error = \"\";\r\n  response.data = ids;\r\n  if (ids.length < min) {\r\n    response.error = \"Minimum \" + min + \" item selections is required\";\r\n  }\r\n\r\n  if (ids.length > max) {\r\n    response.error = \"Maximum item selections is \" + min;\r\n  }\r\n  return response;\r\n};\r\n\r\nexport const checkEmptyValidation = (field, text) => {\r\n  let error = \"\";\r\n  if (field === \"\" || field === undefined || field === null) {\r\n    error = `${text} field is required`;\r\n  }\r\n  return error;\r\n};\r\n\r\nexport const isUrlValid = (emailText, name, required = true) => {\r\n  let error = \"\";\r\n  if (required === true) {\r\n    if (emailText === \"\") {\r\n      return (error = `${name} field is required`);\r\n    }\r\n  }\r\n  const pattern =\r\n    /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g;\r\n  if (pattern.test(emailText)) {\r\n    return \"\";\r\n  } else {\r\n    error = \"Enter a valid Url: \" + emailText;\r\n  }\r\n  return error;\r\n};\r\n\r\nexport const checkMobileNumberValidation = (\r\n  field,\r\n  text,\r\n  min,\r\n  max,\r\n  minNumber = false\r\n) => {\r\n  let error = \"\";\r\n  if (field === \"\" || field === undefined || field === null) {\r\n    return (error = `${text} field is required`);\r\n  }\r\n  let field1 = parseInt(field);\r\n  if (!Number.isInteger(field1)) {\r\n    return (error = `${text} field must be a number`);\r\n  }\r\n  if (field.length < min) {\r\n    return (error = `${text} must be greater then ` + min + \" digit\");\r\n  }\r\n  if (field.length > max) {\r\n    return (error = `${text} field must be less then ` + max + \" digit\");\r\n  }\r\n  if (minNumber && field <= 0) {\r\n    return (error = `${text} field must be greater then 1`);\r\n  }\r\n  return error;\r\n};\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nvar _excluded = [\"active\", \"aria-label\", \"block\", \"className\", \"close\", \"cssModule\", \"color\", \"outline\", \"size\", \"tag\", \"innerRef\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  block: PropTypes.bool,\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  outline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  close: PropTypes.bool\n};\nvar defaultProps = {\n  color: 'secondary',\n  tag: 'button'\n};\n\nvar Button = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Button, _React$Component);\n\n  function Button(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      return this.props.onClick(e);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        ariaLabel = _this$props['aria-label'],\n        block = _this$props.block,\n        className = _this$props.className,\n        close = _this$props.close,\n        cssModule = _this$props.cssModule,\n        color = _this$props.color,\n        outline = _this$props.outline,\n        size = _this$props.size,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    if (close && typeof attributes.children === 'undefined') {\n      attributes.children = /*#__PURE__*/React.createElement(\"span\", {\n        \"aria-hidden\": true\n      }, \"\\xD7\");\n    }\n\n    var btnOutlineColor = \"btn\" + (outline ? '-outline' : '') + \"-\" + color;\n    var classes = mapToCssModules(classNames(className, {\n      close: close\n    }, close || 'btn', close || btnOutlineColor, size ? \"btn-\" + size : false, block ? 'btn-block' : false, {\n      active: active,\n      disabled: this.props.disabled\n    }), cssModule);\n\n    if (attributes.href && Tag === 'button') {\n      Tag = 'a';\n    }\n\n    var defaultAriaLabel = close ? 'Close' : null;\n    return /*#__PURE__*/React.createElement(Tag, _extends({\n      type: Tag === 'button' && attributes.onClick ? 'button' : undefined\n    }, attributes, {\n      className: classes,\n      ref: innerRef,\n      onClick: this.onClick,\n      \"aria-label\": ariaLabel || defaultAriaLabel\n    }));\n  };\n\n  return Button;\n}(React.Component);\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nexport default Button;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteAlert } from \"../actions/alertAction\";\r\nconst Alert = ({ alerts, deleteAlert }) =>\r\n  alerts !== null &&\r\n  alerts.length > 0 &&\r\n  alerts.map((alert) => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n      {alert.msg}\r\n    </div>\r\n  ));\r\n\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  alerts: state.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteAlert })(Alert);\r\n","import React, { Component } from \"react\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport { checkEmailValidation } from \"../../../Helpers/Validation\"\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardGroup,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Row,\r\n} from \"reactstrap\"\r\nimport { connect } from \"react-redux\"\r\nimport { setAlert, deleteAlert } from \"../../../actions/alertAction\"\r\nimport { forgotPassword } from \"../../../actions/authActions\"\r\nimport Alert from \"../../../component/Alert\"\r\n\r\nclass ForgotPassword extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      email: \"\",\r\n      errors: {\r\n        error_email: \"\",\r\n      },\r\n    }\r\n  }\r\n\r\n  onInputChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  };\r\n\r\n  onFormSubmit = async (e) => {\r\n    e.preventDefault()\r\n    let { email, errors } = this.state\r\n    let validationFlag = true\r\n    let error\r\n    errors.error_email = \"\"\r\n\r\n    error = checkEmailValidation(email, 1, 50)\r\n    if (error) {\r\n      validationFlag = false\r\n      errors.error_email = error\r\n    }\r\n\r\n    if (validationFlag === true) {\r\n      await this.props.forgotPassword({ email })\r\n\r\n      this.setState({\r\n        email: \"\",\r\n        errors: {\r\n          error_email: \"\",\r\n        },\r\n      })\r\n    } else {\r\n      this.setState({\r\n        errors: errors,\r\n      })\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { isAuthenticated, loading } = this.props.auth\r\n    if (isAuthenticated === true && loading === false) {\r\n      return <Redirect to=\"/course\" />\r\n    }\r\n\r\n    return (\r\n      <div className=\"app flex-row align-items-center\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col md=\"8\">\r\n              <CardGroup>\r\n                <Card className=\"p-4\">\r\n                  <CardBody>\r\n                    <Alert />\r\n                    <Form onSubmit={(e) => this.onFormSubmit(e)}>\r\n                      <h1>Forgot Password</h1>\r\n                      <p className=\"text-muted\">Get a new password</p>\r\n                      <InputGroup className=\"mb-3\">\r\n                        <InputGroupAddon addonType=\"prepend\">\r\n                          <InputGroupText>\r\n                            <i className=\"icon-user\"></i>\r\n                          </InputGroupText>\r\n                        </InputGroupAddon>\r\n                        <Input\r\n                          type=\"text\"\r\n                          placeholder=\"Email\"\r\n                          autoComplete=\"Email\"\r\n                          name=\"email\"\r\n                          onChange={(e) => this.onInputChange(e)}\r\n                        />\r\n                      </InputGroup>\r\n\r\n                      <Row>\r\n                        <Col xs=\"6\">\r\n                          <Button color=\"primary btnColor\" className=\"px-4\">\r\n                            Submit\r\n                          </Button>\r\n                        </Col>\r\n                        <Col xs=\"6\" className=\"text-right\">\r\n                          <Link to=\"login\" color=\"link\" className=\"px-0\">\r\n                            Login\r\n                          </Link>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form>\r\n                  </CardBody>\r\n                </Card>\r\n                <Card\r\n                  className=\"text-white bg-primary py-5 d-md-down-none\"\r\n                  style={{ width: \"44%\" }}\r\n                >\r\n                  <CardBody className=\"text-center\">\r\n                    <div>\r\n                      <h2>Forgot Password</h2>\r\n                      <p>\r\n                        To reset your password, please enter your Website.com\r\n                        username. Website.com will send the password reset\r\n                        instructions to the email address for this account. If\r\n                        you don't know the username or your email address is no\r\n                        longer valid, please Contact Us for further assistance.\r\n                      </p>\r\n                      {/* <Link to=\"/register\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          className=\"mt-3\"\r\n                          active\r\n                          tabIndex={-1}\r\n                        >\r\n                          Register Now!\r\n                        </Button>\r\n                      </Link> */}\r\n                    </div>\r\n                  </CardBody>\r\n                </Card>\r\n              </CardGroup>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n  setAlert,\r\n  deleteAlert,\r\n  forgotPassword,\r\n})(ForgotPassword)\r\n"],"sourceRoot":""}