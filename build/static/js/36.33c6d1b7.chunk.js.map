{"version":3,"sources":["views/Consultant/consultantTip.js","actions/cunsultantAction.js"],"names":["connect","getAllConsultant","id","page","limit","search","dispatch","a","axios","get","process","res","type","CONSULTANT_TIP_LIST","payload","data","result","props","useParams","useState","pageLength","setpageLength","consultant_tip","useSelector","state","setSearch","useEffect","onPageClick","consultantTips","loading","className","Row","Col","xs","Card","body","CardBody","md","name","value","onChange","e","target","onKeyPress","key","onFieldKeyPress","Table","responsive","striped","docs","length","map","sub","i","src","image","alt","stock_name","width","price","charLimit","readMoreText","readLessText","description","status","colSpan","totalPages","hasPrevPage","hasNextPage","prevPage","nextPage","Pages","skipped","test","item","Fragment","PaginationItem","PaginationLink","disabled","tag","active","onClick","push","Pagination","previous","next","paginationSection"],"mappings":"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","file":"static/js/36.33c6d1b7.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nimport { connect, useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  Row,\r\n  Table,\r\n} from 'reactstrap'\r\nimport { getAllConsultant } from '../../actions/cunsultantAction'\r\nimport ReactReadMoreReadLess from 'react-read-more-read-less'\r\nconst ConsultantTip = (props) => {\r\n  const { getAllConsultant } = props\r\n\r\n  const { id } = useParams()\r\n  const [pageLength, setpageLength] = useState(10)\r\n  const consultant_tip = useSelector((state) => state.consultant_tip)\r\n  const [search, setSearch] = useState('')\r\n\r\n  useEffect(() => {\r\n    getAllConsultant(id, 1, pageLength, '')\r\n  }, [id])\r\n\r\n  const onFieldKeyPress = (e) => {\r\n    if (e.target.name === 'search') {\r\n      if (e.key === 'Enter') {\r\n        getAllConsultant(id, 1, pageLength, e.target.value)\r\n      }\r\n    }\r\n  }\r\n\r\n  const onPageClick = (page) => {\r\n    getAllConsultant(id, page, pageLength, search)\r\n  }\r\n\r\n  const paginationSection = (data) => {\r\n    const { page, totalPages, hasPrevPage, hasNextPage, prevPage, nextPage } =\r\n      data\r\n\r\n    let Pages = []\r\n    let skipped = 0\r\n    for (var i = 1; i <= totalPages; i++) {\r\n      if (\r\n        i === 1 ||\r\n        (page < 4 && i <= 5) ||\r\n        i === page - 1 ||\r\n        i === page + 1 ||\r\n        i === page ||\r\n        i === totalPages ||\r\n        (page >= totalPages - 3 && i >= totalPages - 4)\r\n      ) {\r\n        const test = i\r\n        const item = (\r\n          <React.Fragment key={i}>\r\n            {skipped === 1 ? (\r\n              <PaginationItem>\r\n                <PaginationLink disabled tag='button'>\r\n                  ...\r\n                </PaginationLink>\r\n              </PaginationItem>\r\n            ) : null}\r\n            <PaginationItem\r\n              active={page === i ? true : false}\r\n              onClick={page === i ? () => null : () => onPageClick(test)}\r\n              key={i}>\r\n              <PaginationLink tag='button'>{i}</PaginationLink>\r\n            </PaginationItem>\r\n          </React.Fragment>\r\n        )\r\n        skipped = 0\r\n        Pages.push(item)\r\n      } else {\r\n        skipped = 1\r\n      }\r\n    }\r\n\r\n    return (\r\n      <nav>\r\n        <Pagination>\r\n          <PaginationItem\r\n            onClick={hasPrevPage === true ? () => onPageClick(prevPage) : null}>\r\n            <PaginationLink\r\n              previous\r\n              disabled={hasPrevPage === true ? false : true}\r\n              tag='button'>\r\n              Prev\r\n            </PaginationLink>\r\n          </PaginationItem>\r\n          {Pages}\r\n\r\n          <PaginationItem\r\n            onClick={hasNextPage === true ? () => onPageClick(nextPage) : null}>\r\n            <PaginationLink\r\n              next\r\n              tag='button'\r\n              disabled={hasNextPage === true ? false : true}>\r\n              Next\r\n            </PaginationLink>\r\n          </PaginationItem>\r\n        </Pagination>\r\n      </nav>\r\n    )\r\n  }\r\n\r\n  const { consultantTips, loading } = consultant_tip\r\n\r\n  let { page } = consultantTips\r\n  page = page - 1\r\n\r\n  return (\r\n    <div className='animated fadeIn'>\r\n      <Row>\r\n        <Col xs='12'>\r\n          <Card body className='px-0 py-0'>\r\n            <CardBody className='px-3 py-3'>\r\n              <Col md='12'>\r\n                <Row>\r\n                  <Col md='6' className='pl-0'>\r\n                    <div className='text-left'>\r\n                      <span className=''>Show</span>\r\n                      <select\r\n                        type='text'\r\n                        name='pageLimit'\r\n                        value={pageLength}\r\n                        onChange={(e) => setpageLength(e.target.value)}\r\n                        className='form-control list-style  d-inline  mx-2'>\r\n                        <option value={10}>10 </option>\r\n                        <option value={20}>20 </option>\r\n                        <option value={50}>50 </option>\r\n                        <option value={100}>100 </option>\r\n                      </select>\r\n                    </div>\r\n                  </Col>\r\n                  <Col md='6' className='pr-0'>\r\n                    <div className='text-right'>\r\n                      <span className=''>Search : </span>\r\n                      <input\r\n                        type='text'\r\n                        name='search'\r\n                        className='form-control w-50 input  d-inline'\r\n                        onKeyPress={(e) => onFieldKeyPress(e)}\r\n                        onChange={(e) => setSearch(e.target.value)}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              <Table responsive striped className='mt-2 customDataTable'>\r\n                <thead>\r\n                  <tr>\r\n                    <th>No.</th>\r\n                    <th>Image</th>\r\n                    <th>Stock Name</th>\r\n                    <th>Price</th>\r\n                    <th>Description</th>\r\n                    <th>Status</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {!loading && consultantTips.docs.length > 0 ? (\r\n                    consultantTips.docs.map((sub, i) => (\r\n                      <tr>\r\n                        <td>{page * pageLength + i + 1}</td>\r\n                        <td>\r\n                          <img\r\n                            src={sub.image}\r\n                            alt={sub.stock_name}\r\n                            width='50'\r\n                          />\r\n                        </td>\r\n                        <td>{sub.stock_name}</td>\r\n\r\n                        <td>{sub.price}</td>\r\n                        <td>\r\n                          <ReactReadMoreReadLess\r\n                            charLimit={200}\r\n                            readMoreText={'Read more'}\r\n                            readLessText={'Read less'}>\r\n                            {sub.description}\r\n                          </ReactReadMoreReadLess>\r\n                        </td>\r\n                        <td>\r\n                          {sub.status === 1 && 'Inactive'}\r\n                          {sub.status === 2 && 'Active'}\r\n                          {sub.status === 3 && 'Success'}\r\n                          {sub.status === 4 && 'Failed'}\r\n                          {sub.status === 5 && 'Cancelled'}\r\n                          {sub.status === 6 && 'Success close'}\r\n                          {sub.status === 7 && 'Success Fail'}\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan={6} className='text-center'>\r\n                        No Tip found\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n                <tfoot>\r\n                  <tr>\r\n                    <th>No.</th>\r\n                    <th>Image</th>\r\n                    <th>Stock Name</th>\r\n                    <th>Price</th>\r\n                    <th>Description</th>\r\n                    <th>Status</th>\r\n                  </tr>\r\n                </tfoot>\r\n              </Table>\r\n              <div className='row float-right'>\r\n                <div className='col-md-12 '>\r\n                  {paginationSection(consultantTips)}\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(null, { getAllConsultant })(ConsultantTip)\r\n","import axios from 'axios'\r\nimport { CONSULTANT_TIP_LIST } from './types'\r\n\r\nconst PROXY = process.env.REACT_APP_URL + 'api/'\r\n\r\nexport const getAllConsultant =\r\n  (id, page, limit, search) => async (dispatch) => {\r\n    const res = await axios.get(\r\n      `${PROXY}tip/admin/${id}?page=${page}&limit=${limit}&search=${search}`\r\n    )\r\n    dispatch({\r\n      type: CONSULTANT_TIP_LIST,\r\n      payload: res.data.result,\r\n    })\r\n    return res\r\n  }\r\n"],"sourceRoot":""}