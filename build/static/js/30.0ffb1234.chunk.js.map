{"version":3,"sources":["actions/userActions.js","actions/userPaymentAction.js","views/Subscribe/index.js"],"names":["PROXY","process","config","headers","getUserList","page","limit","search","role","flag","dispatch","a","axios","get","res","type","USER_DETAILS","payload","data","result","addNewUser","formData","post","updateUserDetails","id","details","put","deleteUser","delete","getUserDetailsById","patch","getUserTips","user","getAllSubscribe","USER_SUBSCRIBE_LIST","addRating","body","JSON","stringify","userStatusChange","consultantDrop","connect","state","users","getUserSubscribeList","console","log","GET_SUBSCRIBE_LIST_ALL","props","useState","pageLimit","setPageLimit","setuser","options","setoptions","userSubscribe","useSelector","userSubscribeList","loading","useEffect","then","map","s","label","first_name","last_name","value","_id","onPageClick","className","position","autoClose","Row","Col","xs","Card","CardHeader","CardBody","md","name","onChange","e","target","isClearable","menuPortalTarget","document","styles","menuPortal","base","zIndex","Table","responsive","striped","docs","length","i","groupData","group_name","paid_date","expiry_date","userData","fullName","amount","colSpan","Spinner","totalPages","hasPrevPage","hasNextPage","prevPage","nextPage","Pages","skipped","test","item","Fragment","PaginationItem","PaginationLink","disabled","tag","active","onClick","push","Pagination","previous","next","paginationSection"],"mappings":"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","file":"static/js/30.0ffb1234.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport { USER_DETAILS, USER_LIST, USER_SUBSCRIBE_LIST } from './types'\r\nconst PROXY = process.env.REACT_APP_URL + 'api/'\r\nconst config = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n}\r\n//user detail api\r\n\r\nexport const getUserList =\r\n  (page, limit, search, role = '', flag = '') =>\r\n  async (dispatch) => {\r\n    const res = await axios.get(\r\n      PROXY +\r\n        'user?page=' +\r\n        page +\r\n        '&limit=' +\r\n        limit +\r\n        '&search=' +\r\n        search +\r\n        '&role=' +\r\n        role +\r\n        '&flag=' +\r\n        flag\r\n    )\r\n    dispatch({\r\n      type: USER_DETAILS,\r\n      payload: res.data.result,\r\n    })\r\n    return res\r\n  }\r\n\r\nexport const addNewUser = (formData) => async (dispatch) => {\r\n  const res = await axios.post(PROXY + 'user', formData)\r\n  return res\r\n}\r\n\r\nexport const updateUserDetails = (id, details) => async (dispatch) => {\r\n  const res = await axios.put(PROXY + 'user/' + id, details)\r\n  return res\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch) => {\r\n  const res = await axios.delete(PROXY + 'user/' + id)\r\n  return res\r\n}\r\n\r\nexport const getUserDetailsById = (id) => async (dispatch) => {\r\n  const res = await axios.patch(PROXY + 'user/' + id)\r\n  return res\r\n}\r\n\r\nexport const getUserDropDownList = () => async (dispatch) => {\r\n  const res = await axios.get(PROXY + 'user')\r\n  dispatch({\r\n    type: USER_LIST,\r\n    payload: res.data.result,\r\n  })\r\n}\r\n\r\nexport const getUserTips = (user) => async (dispatch) => {\r\n  const res = await axios.get(PROXY + 'tip/admin?user=' + user)\r\n\r\n  return res\r\n}\r\n\r\nexport const getAllSubscribe =\r\n  (id, page, limit, search) => async (dispatch) => {\r\n    const res = await axios.get(\r\n      `${PROXY}group/admin/subscribe/${id}?page=${page}&limit=${limit}&search=${search}`\r\n    )\r\n    dispatch({\r\n      type: USER_SUBSCRIBE_LIST,\r\n      payload: res.data.result,\r\n    })\r\n    return res\r\n  }\r\n\r\nexport const addRating = (data) => async (dispatch) => {\r\n  const body = JSON.stringify(data)\r\n\r\n  const res = await axios.post(`${PROXY}group/admin/rating`, body, config)\r\n  return res\r\n}\r\n\r\nexport const userStatusChange = (id, data) => async (dispatch) => {\r\n  const body = JSON.stringify(data)\r\n  const res = await axios.put(`${PROXY}user/change-status/${id}`, body, config)\r\n  return res\r\n}\r\n\r\nexport const consultantDrop =\r\n  (type = 2) =>\r\n  async (dispatch) => {\r\n    const res = await axios.get(`${PROXY}admin/consultant?type=${type}`)\r\n    return res\r\n  }\r\n","import axios from 'axios'\r\nimport { GET_SUBSCRIBE_LIST_ALL } from './types'\r\nconst PROXY = process.env.REACT_APP_URL + 'api/'\r\n\r\nexport const getUserSubscribeList =\r\n  (page, limit, search = '', user = '') =>\r\n  async (dispatch) => {\r\n    const res = await axios.get(\r\n      PROXY +\r\n        'group/admin/subscribe?page=' +\r\n        page +\r\n        '&limit=' +\r\n        limit +\r\n        '&search=' +\r\n        search +\r\n        '&user=' +\r\n        user\r\n    )\r\n    console.log(true)\r\n    dispatch({\r\n      type: GET_SUBSCRIBE_LIST_ALL,\r\n      payload: res.data.result,\r\n    })\r\n    return res\r\n  }\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Tooltip } from 'react-tippy'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  Row,\r\n  Spinner,\r\n  Table,\r\n} from 'reactstrap'\r\nimport swal from 'sweetalert'\r\nimport { consultantDrop, getUserList } from '../../actions/userActions'\r\nimport { AppSwitch } from '@coreui/react'\r\nimport { getUserSubscribeList } from '../../actions/userPaymentAction'\r\nimport Select from 'react-select'\r\nimport { useSelector } from 'react-redux'\r\nconst User = (props) => {\r\n  const { getUserSubscribeList, users, deleteUser } = props\r\n  const [search, setSearch] = useState('')\r\n  const [pageLimit, setPageLimit] = useState(10)\r\n\r\n  const [user, setuser] = useState('')\r\n  const [options, setoptions] = useState([])\r\n  const userSubscribe = useSelector((state) => state.userSubscribe)\r\n  const { userSubscribeList, loading } = userSubscribe\r\n  useEffect(() => {\r\n    props.consultantDrop(1).then(async (res) => {\r\n      console.log(res.data.result)\r\n      let result = res.data.result\r\n      let data = await result.map((s) => {\r\n        return {\r\n          label: `${s.first_name} ${s.last_name}`,\r\n          value: s._id,\r\n        }\r\n      })\r\n      setoptions(data)\r\n    })\r\n    getUserSubscribeList(1, pageLimit, '', user)\r\n  }, [pageLimit, user])\r\n\r\n  // const onDeleteUser = (user) => {\r\n  //   swal({\r\n  //     title: 'Are you sure?',\r\n  //     text: `Are you sure that you want to delete user ${user.first_name} ${user.last_name} ?`,\r\n  //     icon: 'warning',\r\n  //     buttons: true,\r\n  //     dangerMode: true,\r\n  //   }).then((willDelete) => {\r\n  //     if (willDelete) {\r\n  //       deleteUser(user._id)\r\n  //         .then((result) => {\r\n  //           toast.success(result.data.message);\r\n  //           getUserList(pageLength, pageLimit, '');\r\n  //         })\r\n  //         .catch((err) => {\r\n  //           if (err.response !== undefined) {\r\n  //             toast.error(err.response.data.message);\r\n  //           }\r\n  //         });\r\n  //     }\r\n  //   });\r\n  // };\r\n\r\n  const onFieldKeyPress = (e) => {\r\n    if (e.target.name === 'search') {\r\n      if (e.key === 'Enter') {\r\n        getUserSubscribeList(1, pageLimit, e.target.value)\r\n      }\r\n    }\r\n  }\r\n\r\n  const onPageClick = (page) => {\r\n    getUserSubscribeList(page, pageLimit, search, user)\r\n  }\r\n\r\n  const paginationSection = (data) => {\r\n    const { page, totalPages, hasPrevPage, hasNextPage, prevPage, nextPage } =\r\n      data\r\n\r\n    let Pages = []\r\n    let skipped = 0\r\n    for (var i = 1; i <= totalPages; i++) {\r\n      if (\r\n        i === 1 ||\r\n        (page < 4 && i <= 5) ||\r\n        i === page - 1 ||\r\n        i === page + 1 ||\r\n        i === page ||\r\n        i === totalPages ||\r\n        (page >= totalPages - 3 && i >= totalPages - 4)\r\n      ) {\r\n        const test = i\r\n        const item = (\r\n          <React.Fragment key={i}>\r\n            {skipped === 1 ? (\r\n              <PaginationItem>\r\n                <PaginationLink disabled tag='button'>\r\n                  ...\r\n                </PaginationLink>\r\n              </PaginationItem>\r\n            ) : null}\r\n            <PaginationItem\r\n              active={page === i ? true : false}\r\n              onClick={page === i ? () => null : () => onPageClick(test)}\r\n              key={i}>\r\n              <PaginationLink tag='button'>{i}</PaginationLink>\r\n            </PaginationItem>\r\n          </React.Fragment>\r\n        )\r\n        skipped = 0\r\n        Pages.push(item)\r\n      } else {\r\n        skipped = 1\r\n      }\r\n    }\r\n\r\n    return (\r\n      <nav className='float-right'>\r\n        <Pagination>\r\n          <PaginationItem\r\n            onClick={hasPrevPage === true ? () => onPageClick(prevPage) : null}>\r\n            <PaginationLink\r\n              previous\r\n              disabled={hasPrevPage === true ? false : true}\r\n              tag='button'>\r\n              Prev\r\n            </PaginationLink>\r\n          </PaginationItem>\r\n          {Pages}\r\n\r\n          <PaginationItem\r\n            onClick={hasNextPage === true ? () => onPageClick(nextPage) : null}>\r\n            <PaginationLink\r\n              next\r\n              tag='button'\r\n              disabled={hasNextPage === true ? false : true}>\r\n              Next\r\n            </PaginationLink>\r\n          </PaginationItem>\r\n        </Pagination>\r\n      </nav>\r\n    )\r\n  }\r\n\r\n  let { page } = userSubscribeList\r\n  page = page - 1\r\n\r\n  return (\r\n    <div className='animated fadeIn'>\r\n      <ToastContainer position='top-right' autoClose={3000} />\r\n      <Row>\r\n        <Col xs='12'>\r\n          <Card className='card-style shadow'>\r\n            <CardHeader>\r\n              <i className='fas fa-money'></i>\r\n              <strong>User Payment History</strong>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Row>\r\n                <Col md='8' className='pl-3'>\r\n                  <div className='text-left'>\r\n                    <span className=''>Show</span>\r\n                    <select\r\n                      type='text'\r\n                      name='pageLength'\r\n                      value={pageLimit}\r\n                      onChange={(e) => setPageLimit(e.target.value)}\r\n                      className='form-control list-width input  d-inline  mx-2'>\r\n                      <option value={10}>10</option>\r\n                      <option value={20}>20</option>\r\n                      <option value={50}>50 </option>\r\n                      <option value={100}>100 </option>\r\n                    </select>\r\n\r\n                    <span className=''>Entries </span>\r\n                  </div>\r\n                </Col>\r\n                <Col md='4' className='pl-3 float-end '>\r\n                  <div className='d-flex align-items-center '>\r\n                    <span className='mr-1'>User</span>\r\n                    <Select\r\n                      options={options}\r\n                      className='w-100'\r\n                      isClearable\r\n                      menuPortalTarget={document.body}\r\n                      styles={{\r\n                        menuPortal: (base) => ({ ...base, zIndex: 9999 }),\r\n                      }}\r\n                      onChange={(value) =>\r\n                        setuser(value?.value ? value.value : '')\r\n                      }\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Table\r\n                responsive\r\n                striped\r\n                className='mt-2 customDataTable text-center'>\r\n                <thead>\r\n                  <tr>\r\n                    <th>No.</th>\r\n                    <th>Group</th>\r\n                    <th>From Date</th>\r\n                    <th>To Date</th>\r\n                    <th>User</th>\r\n                    <th>Amount (₹)</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {!loading && userSubscribeList.docs.length > 0 ? (\r\n                    userSubscribeList.docs.map((data, i) => (\r\n                      <tr key={i}>\r\n                        <td>{page * pageLimit + (i + 1)}</td>\r\n                        <td>{data.groupData.group_name}</td>\r\n                        <td>{data.paid_date}</td>\r\n                        <td>{data.expiry_date}</td>\r\n                        <td>{data.userData.fullName}</td>\r\n                        <td>{data.amount === 0 ? 'Free' : data.amount}</td>\r\n                      </tr>\r\n                    ))\r\n                  ) : loading ? (\r\n                    <tr>\r\n                      <td colSpan='6' className='middle-align text-center'>\r\n                        <Spinner type='grow' />\r\n                      </td>\r\n                    </tr>\r\n                  ) : userSubscribeList.docs.length === 0 && !loading ? (\r\n                    <tr>\r\n                      <td colSpan='6' className='middle-align text-center'>\r\n                        No User payment history found\r\n                      </td>\r\n                    </tr>\r\n                  ) : null}\r\n                </tbody>\r\n                <tfoot>\r\n                  <tr>\r\n                    <th>No.</th>\r\n                    <th>Group</th>\r\n                    <th>From Date</th>\r\n                    <th>To Date</th>\r\n                    <th>User</th>\r\n                    <th>Amount (₹)</th>\r\n                  </tr>\r\n                </tfoot>\r\n              </Table>\r\n              <div className='row float-right'>\r\n                <div className='col-md-12'>\r\n                  {paginationSection(userSubscribeList)}\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  users: state.users,\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getUserList,\r\n  getUserSubscribeList,\r\n  consultantDrop,\r\n})(User)\r\n"],"sourceRoot":""}