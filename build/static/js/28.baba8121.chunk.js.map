{"version":3,"sources":["Helpers/Validation.js","_nav.js","actions/settingAction.js","views/Setting/Setting.js","routes.js","containers/DefaultLayout/DefaultLayout.js"],"names":["checkRequiredValidationWithMinMax","text","field","min","max","required","error","length","checkEmailValidation","emailText","name","pattern","test","checkEmptyValidation","undefined","items","url","icon","children","PROXY","process","config","headers","connect","state","setting","getSetting","dispatch","a","axios","get","res","type","GET_SETTINGS","payload","data","result","SETTINGS_FAIL","addSetting","body","JSON","stringify","post","console","log","response","props","useState","no_days_reminders","no_limit_to_send_notification","no_days_ago_leave","no_classes_send_reminder","setState","error_no_days_reminders","error_no_limit_to_send_notification","error_no_days_ago_leave","error_no_classes_send_reminder","errors","setError","useEffect","then","onSubmitForm","e","preventDefault","validationFlag","errNo_days_reminders","errNo_days_ago_leave","errNo_limit_to_send_notification","errNo_classes_send_reminder","newData","toast","success","message","className","position","autoClose","style","zIndex","Row","Col","xs","Card","CardHeader","CardBody","onSubmit","placeholder","value","onChange","target","height","classnames","FAQ","React","lazy","CMS","News","User","UserView","AddUser","PaymentHistory","routes","path","exact","component","Setting","Notification","DefaultFooter","DefaultHeader","DefaultLayout","loading","this","auth","isAuthenticated","fixed","fallback","display","navConfig","navigation","appRoutes","Container","fluid","map","route","idx","render","to","from","Component"],"mappings":"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","file":"static/js/28.baba8121.chunk.js","sourcesContent":["export const checkRequiredValidationWithMinMax = (\r\n  text,\r\n  field,\r\n  min,\r\n  max,\r\n  required = true\r\n) => {\r\n  let error = \"\";\r\n  if (required === true) {\r\n    if (text === \"\") {\r\n      return (error = `${field} field is required`);\r\n    }\r\n  }\r\n  if (text.length < min) {\r\n    error = `${field} must be greater then ` + min + \" characters\";\r\n  }\r\n  if (text.length > max) {\r\n    error = `${field} field must be less then ` + max + \" characters\";\r\n  }\r\n  return error;\r\n};\r\n\r\nexport const validURL = (str) => {\r\n  var pattern = new RegExp(\r\n    \"^(https?:\\\\/\\\\/)?\" + // protocol\r\n      \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|\" + // domain name\r\n      \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\r\n      \"(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*\" + // port and path\r\n      \"(\\\\?[;&a-z\\\\d%_.~+=-]*)?\" + // query string\r\n      \"(\\\\#[-a-z\\\\d_]*)?$\",\r\n    \"i\"\r\n  ); // fragment locator\r\n  let error = \"\";\r\n  const isValid = !!pattern.test(str);\r\n  if (!isValid) {\r\n    error = \"Please enter a valid URL\";\r\n  }\r\n\r\n  return error;\r\n};\r\nexport const checkEmailValidation = (emailText, name, required = true) => {\r\n  let error = \"\";\r\n\r\n  if (required === true) {\r\n    if (emailText === \"\") {\r\n      return (error = `${name} field is required`);\r\n    }\r\n  }\r\n\r\n  const pattern =\r\n    /^[a-zA-Z0-9_]+(\\.[a-zA-Z0-9_]+)*@[a-z0-9]+([a-z0-9]+)*(\\.[a-z0-9]+([a-z0-9]+)*)*\\.[a-z]{2,4}$/;\r\n  if (pattern.test(emailText)) {\r\n    return \"\";\r\n  } else {\r\n    error = \"Enter a valid email: \" + emailText;\r\n  }\r\n  return error;\r\n};\r\n\r\nexport const checkMultipleChekboxSelectionWithMinMax = (\r\n  array,\r\n  min = 0,\r\n  max = 10000000\r\n) => {\r\n  let ids = [];\r\n  array.forEach((element, index) => {\r\n    if (element === true) {\r\n      ids.push(index);\r\n    }\r\n  });\r\n  let response = {};\r\n  response.error = \"\";\r\n  response.data = ids;\r\n  if (ids.length < min) {\r\n    response.error = \"Minimum \" + min + \" item selections is required\";\r\n  }\r\n\r\n  if (ids.length > max) {\r\n    response.error = \"Maximum item selections is \" + min;\r\n  }\r\n  return response;\r\n};\r\n\r\nexport const checkEmptyValidation = (field, text) => {\r\n  let error = \"\";\r\n  if (field === \"\" || field === undefined || field === null) {\r\n    error = `${text} field is required`;\r\n  }\r\n  return error;\r\n};\r\n\r\nexport const isUrlValid = (emailText, name, required = true) => {\r\n  let error = \"\";\r\n  if (required === true) {\r\n    if (emailText === \"\") {\r\n      return (error = `${name} field is required`);\r\n    }\r\n  }\r\n  const pattern =\r\n    /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g;\r\n  if (pattern.test(emailText)) {\r\n    return \"\";\r\n  } else {\r\n    error = \"Enter a valid Url: \" + emailText;\r\n  }\r\n  return error;\r\n};\r\n\r\nexport const checkMobileNumberValidation = (\r\n  field,\r\n  text,\r\n  min,\r\n  max,\r\n  minNumber = false\r\n) => {\r\n  let error = \"\";\r\n  if (field === \"\" || field === undefined || field === null) {\r\n    return (error = `${text} field is required`);\r\n  }\r\n  let field1 = parseInt(field);\r\n  if (!Number.isInteger(field1)) {\r\n    return (error = `${text} field must be a number`);\r\n  }\r\n  if (field.length < min) {\r\n    return (error = `${text} must be greater then ` + min + \" digit\");\r\n  }\r\n  if (field.length > max) {\r\n    return (error = `${text} field must be less then ` + max + \" digit\");\r\n  }\r\n  if (minNumber && field <= 0) {\r\n    return (error = `${text} field must be greater then 1`);\r\n  }\r\n  return error;\r\n};\r\n","export default {\r\n  items: [\r\n    {\r\n      name: 'Users',\r\n      url: '/user',\r\n      icon: 'fas fa-users',\r\n    },\r\n    // {\r\n    //   name: \"Community Forum\",\r\n    //   url: \"/community-forum\",\r\n    //   icon: \"fa fa-users\",\r\n    // },\r\n    // {\r\n    //   name: 'Content Management',\r\n    //   url: '/content-management',\r\n    //   icon: 'fas fa-file-alt',\r\n    // },\r\n    {\r\n      name: 'News',\r\n      url: '/news',\r\n      icon: 'fas fa-newspaper',\r\n    },\r\n    {\r\n      name: 'User Payment History',\r\n      url: '/user-payment-history',\r\n      icon: 'fas fa-money',\r\n    },\r\n    {\r\n      name: 'Payment History',\r\n      url: '/payment-history',\r\n      icon: 'fas fa-list',\r\n    },\r\n    {\r\n      name: 'Payment Intimate',\r\n      url: '/payment-intimate',\r\n      icon: 'fas fa-money',\r\n    },\r\n    {\r\n      name: 'Settings',\r\n      url: '/settings',\r\n      icon: 'icon-settings',\r\n      children: [\r\n        {\r\n          name: 'Content Management',\r\n          url: '/settings/content-management',\r\n          // icon: 'fa fa-list-alt',\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n}\r\n","import axios from 'axios'\r\nimport { GET_SETTINGS, SETTINGS_FAIL } from './types'\r\n\r\nconst PROXY = process.env.REACT_APP_URL + 'api/'\r\n\r\nconst config = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n}\r\n// Get Setting\r\nexport const getSetting = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`${PROXY}setting`)\r\n    dispatch({\r\n      type: GET_SETTINGS,\r\n      payload: res.data.result,\r\n    })\r\n    return res.data.result\r\n  } catch (err) {\r\n    dispatch({\r\n      type: SETTINGS_FAIL,\r\n    })\r\n  }\r\n}\r\n\r\n// edit Setting\r\nexport const addSetting = (data) => async (dispatch) => {\r\n  const body = JSON.stringify(data)\r\n  try {\r\n    const res = await axios.post(`${PROXY}setting`, body, config)\r\n    return res\r\n  } catch (err) {\r\n    console.log(err.response)\r\n    dispatch({\r\n      type: SETTINGS_FAIL,\r\n    })\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { checkEmptyValidation } from '../../Helpers/Validation'\r\nimport { Row, Col, Card, CardHeader, CardBody } from 'reactstrap'\r\n\r\nimport classnames from 'classnames'\r\nimport { getSetting, addSetting } from '../../actions/settingAction'\r\nimport { connect } from 'react-redux'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nconst Setting = (props) => {\r\n  const { getSetting } = props\r\n  const [state, setState] = useState({\r\n    no_days_reminders: '',\r\n    no_limit_to_send_notification: '',\r\n    no_days_ago_leave: '',\r\n    no_classes_send_reminder: '',\r\n  })\r\n  const [errors, setError] = useState({\r\n    error_no_days_reminders: '',\r\n    error_no_limit_to_send_notification: '',\r\n    error_no_days_ago_leave: '',\r\n    error_no_classes_send_reminder: '',\r\n  })\r\n\r\n  useEffect(() => {\r\n    getSetting().then((res) => {\r\n      setState({\r\n        no_days_reminders: res.no_days_reminders,\r\n        no_days_ago_leave: res.no_days_ago_leave,\r\n        no_classes_send_reminder: res.no_classes_send_reminder,\r\n        no_limit_to_send_notification: res.no_limit_to_send_notification,\r\n      })\r\n    })\r\n  }, [])\r\n  const onSubmitForm = async (e) => {\r\n    e.preventDefault()\r\n    const {\r\n      no_days_reminders,\r\n      no_limit_to_send_notification,\r\n      no_days_ago_leave,\r\n      no_classes_send_reminder,\r\n    } = state\r\n    let validationFlag = true\r\n    let errNo_days_reminders = ''\r\n    let errNo_days_ago_leave = ''\r\n    let errNo_limit_to_send_notification = ''\r\n    let errNo_classes_send_reminder = ''\r\n    errNo_days_reminders = checkEmptyValidation(\r\n      no_days_reminders,\r\n      'No of days reminders'\r\n    )\r\n    errNo_days_ago_leave = checkEmptyValidation(\r\n      no_days_ago_leave,\r\n      'Number of days ago leave application required'\r\n    )\r\n    errNo_limit_to_send_notification = checkEmptyValidation(\r\n      no_limit_to_send_notification,\r\n      'Leave lower limit to send notification'\r\n    )\r\n    errNo_classes_send_reminder = checkEmptyValidation(\r\n      no_classes_send_reminder,\r\n      'Number of classes to send reminder'\r\n    )\r\n    if (\r\n      errNo_days_reminders ||\r\n      errNo_days_ago_leave ||\r\n      errNo_classes_send_reminder ||\r\n      errNo_limit_to_send_notification\r\n    ) {\r\n      validationFlag = false\r\n      setError({\r\n        error_no_days_reminders: errNo_days_reminders,\r\n        error_no_limit_to_send_notification: errNo_limit_to_send_notification,\r\n        error_no_days_ago_leave: errNo_days_ago_leave,\r\n        error_no_classes_send_reminder: errNo_classes_send_reminder,\r\n      })\r\n    } else {\r\n      validationFlag = true\r\n      setError({\r\n        error_no_days_reminders: '',\r\n        error_no_limit_to_send_notification: '',\r\n        error_no_days_ago_leave: '',\r\n        error_no_classes_send_reminder: '',\r\n      })\r\n    }\r\n    if (validationFlag) {\r\n      let newData = {\r\n        no_days_reminders,\r\n        no_limit_to_send_notification,\r\n        no_days_ago_leave,\r\n        no_classes_send_reminder,\r\n      }\r\n      try {\r\n        const res = await props.addSetting(newData)\r\n        toast.success(res.data.message)\r\n      } catch (err) {\r\n        toast.error(err.response.data.message)\r\n      }\r\n    }\r\n  }\r\n  // const\r\n  // const onFileChange = (e) => {\r\n  //   setState({ [e.target.name]: e.target.value })\r\n  // }\r\n  // clg\r\n\r\n  // set\r\n  const containerStyle = {\r\n    zIndex: 1999,\r\n  }\r\n  return (\r\n    <div className='animated fadeIn'>\r\n      <ToastContainer\r\n        position='top-right'\r\n        autoClose={5000}\r\n        style={containerStyle}\r\n      />\r\n      <Row>\r\n        <Col xs='12'>\r\n          <Card>\r\n            <CardHeader>\r\n              <i className='fa fa-cog'></i>\r\n              <strong>Settings</strong>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <form onSubmit={(e) => onSubmitForm(e)}>\r\n                <Row>\r\n                  <Col xs='12'>\r\n                    <div className='form-group'>\r\n                      <label>No of days reminders </label>\r\n                      <span className='required'>*</span>\r\n                      <input\r\n                        type='number'\r\n                        name='no_days_reminders'\r\n                        placeholder='Enter no of days reminders'\r\n                        value={state.no_days_reminders}\r\n                        onChange={(e) =>\r\n                          setState({\r\n                            ...state,\r\n                            no_days_reminders: e.target.value,\r\n                          })\r\n                        }\r\n                        style={{ height: 'auto' }}\r\n                        className={classnames(\r\n                          { 'form-control input': true },\r\n                          {\r\n                            'is-invalid':\r\n                              errors.error_no_days_reminders.length > 0,\r\n                          }\r\n                        )}\r\n                        min='1'\r\n                      />\r\n                      <em>\r\n                        <span className='text-danger'>\r\n                          {errors.error_no_days_reminders}\r\n                        </span>\r\n                      </em>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                      <label>Leave lower limit to send notification</label>\r\n                      <span className='required'>*</span>\r\n\r\n                      <input\r\n                        type='number'\r\n                        name='no_limit_to_send_notification'\r\n                        value={state.no_limit_to_send_notification}\r\n                        placeholder='Enter leave lower limit to send notification'\r\n                        onChange={(e) =>\r\n                          setState({\r\n                            ...state,\r\n                            no_limit_to_send_notification: e.target.value,\r\n                          })\r\n                        }\r\n                        style={{ height: 'auto' }}\r\n                        className={classnames(\r\n                          { 'form-control input': true },\r\n                          {\r\n                            'is-invalid':\r\n                              errors.error_no_limit_to_send_notification\r\n                                .length > 0,\r\n                          }\r\n                        )}\r\n                        min='1'\r\n                      />\r\n                      <em>\r\n                        <span className='text-danger'>\r\n                          {errors.error_no_limit_to_send_notification}\r\n                        </span>\r\n                      </em>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                      <label>\r\n                        Number of days ago leave application required\r\n                      </label>\r\n                      <span className='required'>*</span>\r\n\r\n                      <input\r\n                        type='number'\r\n                        name='no_days_ago_leave'\r\n                        value={state.no_days_ago_leave}\r\n                        onChange={(e) =>\r\n                          setState({\r\n                            ...state,\r\n                            no_days_ago_leave: e.target.value,\r\n                          })\r\n                        }\r\n                        placeholder='Enter number of days ago leave application required'\r\n                        style={{ height: 'auto' }}\r\n                        className={classnames(\r\n                          { 'form-control input': true },\r\n                          {\r\n                            'is-invalid':\r\n                              errors.error_no_days_ago_leave.length > 0,\r\n                          }\r\n                        )}\r\n                        min='1'\r\n                      />\r\n                      <em>\r\n                        <span className='text-danger'>\r\n                          {errors.error_no_days_ago_leave}\r\n                        </span>\r\n                      </em>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                      <label>Number of classes to send reminder</label>\r\n                      <span className='required'>*</span>\r\n\r\n                      <input\r\n                        type='number'\r\n                        name='no_classes_send_reminder'\r\n                        value={state.no_classes_send_reminder}\r\n                        onChange={(e) =>\r\n                          setState({\r\n                            ...state,\r\n                            no_classes_send_reminder: e.target.value,\r\n                          })\r\n                        }\r\n                        placeholder='Enter number of classes to send reminder'\r\n                        style={{ height: 'auto' }}\r\n                        className={classnames(\r\n                          { 'form-control input': true },\r\n                          {\r\n                            'is-invalid':\r\n                              errors.error_no_classes_send_reminder.length > 0,\r\n                          }\r\n                        )}\r\n                        min='1'\r\n                      />\r\n                      <em>\r\n                        <span className='text-danger'>\r\n                          {errors.error_no_classes_send_reminder}\r\n                        </span>\r\n                      </em>\r\n                    </div>\r\n                    <div className='w-100 float-left mt-3'>\r\n                      <button className='btn btnColor'>Save</button>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </form>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  setting: state.setting,\r\n})\r\n\r\nexport default connect(mapStateToProps, { getSetting, addSetting })(Setting)\r\n","import React from 'react'\r\n\r\n// Setting Component\r\nimport Setting from './views/Setting/Setting'\r\n\r\nconst FAQ = React.lazy(() => import('./views/Setting/FAQ/FAQ'))\r\nconst CMS = React.lazy(() =>\r\n  import('./views/Setting/CMS/ContentManagementSystem')\r\n)\r\nconst News = React.lazy(() => import('./views/Setting/News/News'))\r\nconst MediaManagement = React.lazy(() =>\r\n  import('./views/Setting/MediaManagement/MediaManagement')\r\n)\r\n// User\r\nconst User = React.lazy(() => import('./views/User/User'))\r\nconst UserView = React.lazy(() => import('./views/User/View'))\r\nconst AddUser = React.lazy(() => import('./views/User/AddUser'))\r\nconst PaymentHistory = React.lazy(() =>\r\n  import('./views/PaymenyHistory/PaymentHistory')\r\n)\r\n// consultant\r\n\r\nconst Consultant = React.lazy(() => import('./views/Consultant/View'))\r\nconst PaymentIntimate = React.lazy(() =>\r\n  import('./views/paymentIntimate/index')\r\n)\r\nconst UserSubscribe = React.lazy(() => import('./views/Subscribe'))\r\nconst routes = [\r\n  {\r\n    path: '/settings',\r\n    exact: true,\r\n    name: 'Settings',\r\n    component: Setting,\r\n  },\r\n\r\n  {\r\n    path: '/settings/faq',\r\n    exact: true,\r\n    name: 'FAQ',\r\n    component: FAQ,\r\n  },\r\n  {\r\n    path: '/settings/content-management',\r\n    exact: true,\r\n    name: 'Content Management',\r\n    component: CMS,\r\n  },\r\n  {\r\n    path: '/news',\r\n    exact: true,\r\n    name: 'News',\r\n    component: News,\r\n  },\r\n\r\n  {\r\n    path: '/notification',\r\n    exact: true,\r\n    name: 'Notifications',\r\n    component: Notification,\r\n  },\r\n  {\r\n    path: '/user',\r\n    exact: true,\r\n    name: 'User',\r\n    component: User,\r\n  },\r\n  {\r\n    path: '/user/investor/view/:id',\r\n    exact: true,\r\n    name: 'User detail',\r\n    component: UserView,\r\n  },\r\n  {\r\n    path: '/user/consultant/view/:id',\r\n    exact: true,\r\n    name: 'Consultant detail',\r\n    component: Consultant,\r\n  },\r\n  {\r\n    path: '/user/edit/:_id',\r\n    exact: true,\r\n    name: 'Edit user',\r\n    component: AddUser,\r\n  },\r\n  {\r\n    path: '/user/add',\r\n    exact: true,\r\n    name: 'Add user',\r\n    component: AddUser,\r\n  },\r\n  {\r\n    path: '/payment-history',\r\n    exact: true,\r\n    name: 'Payment history',\r\n    component: PaymentHistory,\r\n  },\r\n  {\r\n    path: '/payment-intimate',\r\n    exact: true,\r\n    name: 'Payment Intimate',\r\n    component: PaymentIntimate,\r\n  },\r\n  {\r\n    path: '/user-payment-history',\r\n    exact: true,\r\n    name: 'User Payment History ',\r\n    component: UserSubscribe,\r\n  },\r\n]\r\n\r\nexport default routes\r\n","import React, { Component, Suspense } from \"react\";\r\nimport { Redirect, Switch } from \"react-router-dom\";\r\nimport { Container } from \"reactstrap\";\r\n// import PrivateRoute from \"../../Routing/PrivateRoute\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  // AppAside,\r\n  AppBreadcrumb,\r\n  AppFooter,\r\n  AppHeader,\r\n  AppSidebar,\r\n  AppSidebarFooter,\r\n  AppSidebarForm,\r\n  AppSidebarHeader,\r\n  AppSidebarMinimizer,\r\n  AppSidebarNav,\r\n} from \"@coreui/react\";\r\nimport { Route } from \"react-router-dom\";\r\n// sidebar nav config\r\nimport navigation from \"../../_nav\";\r\n// routes config\r\nimport routes from \"../../routes\";\r\n\r\n// const DefaultAside = React.lazy(() => import(\"./DefaultAside\"));\r\nconst DefaultFooter = React.lazy(() => import(\"./DefaultFooter\"));\r\nconst DefaultHeader = React.lazy(() => import(\"./DefaultHeader\"));\r\n\r\nclass DefaultLayout extends Component {\r\n  loading = () => (\r\n    <div className=\"animated fadeIn pt-1 text-center\">\r\n      <div className=\"sk-spinner sk-spinner-pulse\"></div>\r\n    </div>\r\n  );\r\n\r\n  render() {\r\n    const { isAuthenticated, loading } = this.props.auth;\r\n    // console.log(loading);\r\n\r\n    if (loading === true) {\r\n      return <div />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <AppHeader fixed>\r\n          <Suspense fallback={this.loading()}>\r\n            <DefaultHeader />\r\n          </Suspense>\r\n        </AppHeader>\r\n        <div className=\"app-body\">\r\n          <AppSidebar fixed display=\"lg\">\r\n            <AppSidebarHeader />\r\n            <AppSidebarForm />\r\n            <Suspense>\r\n              <AppSidebarNav navConfig={navigation} {...this.props} />\r\n            </Suspense>\r\n            <AppSidebarFooter />\r\n            <AppSidebarMinimizer />\r\n          </AppSidebar>\r\n          <main className=\"main\">\r\n            <AppBreadcrumb appRoutes={routes} />\r\n            <Container fluid>\r\n              <Suspense fallback={this.loading()}>\r\n                <Switch>\r\n                  {routes.map((route, idx) => {\r\n                    return route.component ? (\r\n                      <Route\r\n                        key={idx}\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        name={route.name}\r\n                        render={(props) =>\r\n                          isAuthenticated === true && loading === false ? (\r\n                            <route.component {...props} />\r\n                          ) : (\r\n                            <Redirect to=\"/login\" />\r\n                          )\r\n                        }\r\n                      />\r\n                    ) : null;\r\n                  })}\r\n                  <Redirect from=\"/\" to=\"/user\" />\r\n                </Switch>\r\n              </Suspense>\r\n            </Container>\r\n          </main>\r\n          {/* <AppAside fixed>\r\n            <Suspense fallback={this.loading()}>\r\n              <DefaultAside />\r\n            </Suspense>\r\n          </AppAside> */}\r\n        </div>\r\n        <AppFooter>\r\n          <Suspense fallback={this.loading()}>\r\n            <DefaultFooter />\r\n          </Suspense>\r\n        </AppFooter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, {})(DefaultLayout);\r\n"],"sourceRoot":""}