{"version":3,"sources":["actions/userActions.js","views/User/AddUser.js"],"names":["PROXY","process","config","headers","getUserList","page","limit","search","role","flag","dispatch","a","axios","get","res","type","USER_DETAILS","payload","data","result","addNewUser","formData","post","updateUserDetails","id","details","put","deleteUser","delete","getUserDetailsById","patch","getUserTips","user","getAllSubscribe","USER_SUBSCRIBE_LIST","addRating","body","JSON","stringify","userStatusChange","consultantDrop","connect","state","props","_id","useParams","useState","saveLoading","setSaveLoading","photoLogoError","setPhotoLogoError","logoPreview","setlogoPreview","logoUrl","setlogoUrl","photoError","setPhotoError","imagePreview","setPreview","imagePreviewUrl","setUrl","first_name","last_name","email","password","address","about_us","facebook","twitter","instagram","linkdin","youtube","setstate","error_first_name","error_last_name","error_email","error_password","error_address","error_about_us","error_facebook","error_twitter","error_instagram","error_linkdin","error_youtube","errors","seterrors","useEffect","then","response","logo","banner","handleInputChange","e","target","name","value","className","xs","md","placeholder","onChange","style","height","classnames","invalid","length","valid","accept","capture","preventDefault","files","file","URL","createObjectURL","handleFileChange","src","alt","width","objectFit","handleLogoChange","loading","ZOOM_OUT","onClick","errFirstName","errLastName","errEmail","errAddress","errAboutUs","errFaceBook","errTwitter","errLinkdin","errYoutube","errInstagram","errImage","errLogo","validationFlag","errPassword","checkEmptyValidation","checkEmailValidation","FormData","append","toast","success","message","setTimeout","history","push","catch","err","error","onSubmitForm"],"mappings":"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","file":"static/js/31.d5b9ae0c.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport { USER_DETAILS, USER_LIST, USER_SUBSCRIBE_LIST } from './types'\r\nconst PROXY = process.env.REACT_APP_URL + 'api/'\r\nconst config = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n}\r\n//user detail api\r\n\r\nexport const getUserList =\r\n  (page, limit, search, role = '', flag = '') =>\r\n  async (dispatch) => {\r\n    const res = await axios.get(\r\n      PROXY +\r\n        'user?page=' +\r\n        page +\r\n        '&limit=' +\r\n        limit +\r\n        '&search=' +\r\n        search +\r\n        '&role=' +\r\n        role +\r\n        '&flag=' +\r\n        flag\r\n    )\r\n    dispatch({\r\n      type: USER_DETAILS,\r\n      payload: res.data.result,\r\n    })\r\n    return res\r\n  }\r\n\r\nexport const addNewUser = (formData) => async (dispatch) => {\r\n  const res = await axios.post(PROXY + 'user', formData)\r\n  return res\r\n}\r\n\r\nexport const updateUserDetails = (id, details) => async (dispatch) => {\r\n  const res = await axios.put(PROXY + 'user/' + id, details)\r\n  return res\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch) => {\r\n  const res = await axios.delete(PROXY + 'user/' + id)\r\n  return res\r\n}\r\n\r\nexport const getUserDetailsById = (id) => async (dispatch) => {\r\n  const res = await axios.patch(PROXY + 'user/' + id)\r\n  return res\r\n}\r\n\r\nexport const getUserDropDownList = () => async (dispatch) => {\r\n  const res = await axios.get(PROXY + 'user')\r\n  dispatch({\r\n    type: USER_LIST,\r\n    payload: res.data.result,\r\n  })\r\n}\r\n\r\nexport const getUserTips = (user) => async (dispatch) => {\r\n  const res = await axios.get(PROXY + 'tip/admin?user=' + user)\r\n\r\n  return res\r\n}\r\n\r\nexport const getAllSubscribe =\r\n  (id, page, limit, search) => async (dispatch) => {\r\n    const res = await axios.get(\r\n      `${PROXY}group/admin/subscribe/${id}?page=${page}&limit=${limit}&search=${search}`\r\n    )\r\n    dispatch({\r\n      type: USER_SUBSCRIBE_LIST,\r\n      payload: res.data.result,\r\n    })\r\n    return res\r\n  }\r\n\r\nexport const addRating = (data) => async (dispatch) => {\r\n  const body = JSON.stringify(data)\r\n\r\n  const res = await axios.post(`${PROXY}group/admin/rating`, body, config)\r\n  return res\r\n}\r\n\r\nexport const userStatusChange = (id, data) => async (dispatch) => {\r\n  const body = JSON.stringify(data)\r\n  const res = await axios.put(`${PROXY}user/change-status/${id}`, body, config)\r\n  return res\r\n}\r\n\r\nexport const consultantDrop =\r\n  (type = 2) =>\r\n  async (dispatch) => {\r\n    const res = await axios.get(`${PROXY}admin/consultant?type=${type}`)\r\n    return res\r\n  }\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  FormGroup,\r\n  Label,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport LaddaButton, { ZOOM_OUT } from \"react-ladda\";\r\nimport \"ladda/dist/ladda-themeless.min.css\";\r\nimport classnames from \"classnames\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addNewUser,\r\n  updateUserDetails,\r\n  getUserDetailsById,\r\n} from \"../../actions/userActions\";\r\nimport {\r\n  checkEmptyValidation,\r\n  checkEmailValidation,\r\n} from \"../../Helpers/Validation\";\r\nimport { useParams } from \"react-router\";\r\n\r\nconst AddUser = (props) => {\r\n  const { _id } = useParams();\r\n  const { addNewUser, updateUserDetails, getUserDetailsById } = props;\r\n\r\n  const [saveLoading, setSaveLoading] = useState(false);\r\n  const [photoLogoError, setPhotoLogoError] = useState(\"\");\r\n  const [logoPreview, setlogoPreview] = useState(\"\");\r\n  const [logoUrl, setlogoUrl] = useState(\"\");\r\n\r\n  const [photoError, setPhotoError] = useState(\"\");\r\n  const [imagePreview, setPreview] = useState(\"\");\r\n  const [imagePreviewUrl, setUrl] = useState(\"\");\r\n\r\n  const [state, setstate] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    address: \"\",\r\n    about_us: \"\",\r\n    facebook: \"\",\r\n    twitter: \"\",\r\n    instagram: \"\",\r\n    linkdin: \"\",\r\n    youtube: \"\",\r\n  });\r\n\r\n  const [errors, seterrors] = useState({\r\n    error_first_name: \"\",\r\n    error_last_name: \"\",\r\n    error_email: \"\",\r\n    error_password: \"\",\r\n    error_address: \"\",\r\n    error_about_us: \"\",\r\n    error_facebook: \"\",\r\n    error_twitter: \"\",\r\n    error_instagram: \"\",\r\n    error_linkdin: \"\",\r\n    error_youtube: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (_id) {\r\n      getUserDetailsById(_id).then((res) => {\r\n        let response = res.data.result;\r\n        setstate({\r\n          ...state,\r\n          first_name: response.first_name,\r\n          last_name: response.last_name,\r\n          email: response.email,\r\n          address: response.address,\r\n          about_us: response.about_us,\r\n          facebook: response.facebook,\r\n          twitter: response.twitter,\r\n          instagram: response.instagram,\r\n          linkdin: response.linkdin,\r\n          youtube: response.youtube,\r\n        });\r\n        setlogoPreview(response.logo);\r\n        setlogoUrl(response.logo);\r\n        setPreview(response.banner);\r\n        setUrl(response.banner);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const handleFileChange = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.files.length) {\r\n      let file = e.target.files[0];\r\n      setUrl(file);\r\n      setPreview(URL.createObjectURL(e.target.files[0]));\r\n    }\r\n  };\r\n\r\n  const handleLogoChange = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.files.length) {\r\n      let file = e.target.files[0];\r\n      setlogoUrl(file);\r\n      setlogoPreview(URL.createObjectURL(e.target.files[0]));\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setstate({\r\n      ...state,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    const {\r\n      first_name,\r\n      last_name,\r\n      email,\r\n      password,\r\n      address,\r\n      about_us,\r\n      facebook,\r\n      twitter,\r\n      instagram,\r\n      linkdin,\r\n      youtube,\r\n    } = state;\r\n    let validationFlag = true;\r\n    let errFirstName = \"\";\r\n    let errLastName = \"\";\r\n    let errEmail = \"\";\r\n    let errAddress = \"\";\r\n    let errPassword = \"\";\r\n    let errAboutUs = \"\";\r\n    let errFaceBook = \"\";\r\n    let errTwitter = \"\";\r\n    let errLinkdin = \"\";\r\n    let errYoutube = \"\";\r\n    let errInstagram = \"\";\r\n    let errImage = \"\";\r\n    let errLogo = \"\";\r\n    errFirstName = checkEmptyValidation(first_name, \"First Name\");\r\n    errLastName = checkEmptyValidation(last_name, \"Last Name\");\r\n    errEmail = checkEmailValidation(email, \"Email\");\r\n    errAddress = checkEmptyValidation(address, \"Address\");\r\n    if (!_id) {\r\n      errPassword = checkEmptyValidation(password, \"Password\");\r\n    }\r\n    errAboutUs = checkEmptyValidation(about_us, \"About Us\");\r\n    errFaceBook = checkEmptyValidation(facebook, \"Facebook\");\r\n    errTwitter = checkEmptyValidation(twitter, \"Twitter\");\r\n    errLinkdin = checkEmptyValidation(linkdin, \"Linkdin\");\r\n    errInstagram = checkEmptyValidation(instagram, \"Instagram\");\r\n    errYoutube = checkEmptyValidation(youtube, \"Youtube\");\r\n    errImage = checkEmptyValidation(imagePreviewUrl, \"Banner Image\");\r\n    errLogo = checkEmptyValidation(logoUrl, \"Logo\");\r\n    if (\r\n      errFirstName ||\r\n      errLastName ||\r\n      errEmail ||\r\n      errAddress ||\r\n      errPassword ||\r\n      errAboutUs ||\r\n      errFaceBook ||\r\n      errTwitter ||\r\n      errLinkdin ||\r\n      errInstagram ||\r\n      errYoutube ||\r\n      errImage ||\r\n      errLogo\r\n    ) {\r\n      validationFlag = false;\r\n      seterrors({\r\n        error_first_name: errFirstName,\r\n        error_last_name: errLastName,\r\n        error_email: errEmail,\r\n        error_password: errPassword,\r\n        error_address: errAddress,\r\n        error_about_us: errAboutUs,\r\n        error_facebook: errFaceBook,\r\n        error_twitter: errTwitter,\r\n        error_instagram: errInstagram,\r\n        error_linkdin: errLinkdin,\r\n        error_youtube: errYoutube,\r\n      });\r\n      setPhotoError(errImage);\r\n      setPhotoLogoError(errLogo);\r\n    } else {\r\n      validationFlag = true;\r\n      seterrors({\r\n        error_first_name: \"\",\r\n        error_last_name: \"\",\r\n        error_email: \"\",\r\n        error_password: \"\",\r\n        error_address: \"\",\r\n        error_about_us: \"\",\r\n        error_facebook: \"\",\r\n        error_twitter: \"\",\r\n        error_instagram: \"\",\r\n        error_linkdin: \"\",\r\n        error_youtube: \"\",\r\n      });\r\n      setPhotoError(\"\");\r\n      setPhotoLogoError(\"\");\r\n    }\r\n    if (validationFlag === true) {\r\n      setSaveLoading(true);\r\n      const formData = new FormData();\r\n      formData.append(\"first_name\", first_name);\r\n      formData.append(\"last_name\", last_name);\r\n      formData.append(\"email\", email);\r\n      formData.append(\"password\", password);\r\n      formData.append(\"address\", address);\r\n      formData.append(\"about_us\", about_us);\r\n      formData.append(\"facebook\", facebook);\r\n      formData.append(\"twitter\", twitter);\r\n      formData.append(\"instagram\", instagram);\r\n      formData.append(\"linkdin\", linkdin);\r\n      formData.append(\"youtube\", youtube);\r\n      formData.append(\"banner\", imagePreviewUrl);\r\n      formData.append(\"logo\", logoUrl);\r\n      if (_id) {\r\n        updateUserDetails(_id, formData)\r\n          .then((res) => {\r\n            setSaveLoading(false);\r\n            toast.success(res.data.message);\r\n            setTimeout(() => {\r\n              props.history.push(`/user`);\r\n            }, 1300);\r\n          })\r\n          .catch((err) => {\r\n            toast.error(err.response.data.message);\r\n          });\r\n      } else {\r\n        addNewUser(formData)\r\n          .then((res) => {\r\n            setSaveLoading(false);\r\n            toast.success(res.data.message);\r\n            setTimeout(() => {\r\n              props.history.push(`/user`);\r\n            }, 1300);\r\n          })\r\n          .catch((err) => {\r\n            toast.error(err.response.data.message);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"animated fadeIn\">\r\n      <Row>\r\n        <Col xs=\"12\">\r\n          <Card>\r\n            <CardHeader>\r\n              <i className=\"fas fa-user\"></i>\r\n              <strong>{_id ? \"Edit User\" : \"Add User\"}</strong>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Row>\r\n                <Col md=\"12\">\r\n                  <Row>\r\n                    <Col md={6}>\r\n                      <FormGroup>\r\n                        <Label>First Name</Label>\r\n                        <span className=\"required\">*</span>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"first_name\"\r\n                          placeholder=\"Enter First Name\"\r\n                          onChange={(e) => handleInputChange(e)}\r\n                          style={{ height: \"auto\" }}\r\n                          value={state.first_name || \"\"}\r\n                          className={classnames(\r\n                            \"form-control input\",\r\n                            {\r\n                              invalid: errors.error_first_name.length > 0,\r\n                            },\r\n                            {\r\n                              valid: errors.error_first_name.length === 0,\r\n                            }\r\n                          )}\r\n                        />\r\n                        {errors.error_first_name && (\r\n                          <span className=\"invalid-text \">\r\n                            {errors.error_first_name}\r\n                          </span>\r\n                        )}\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <FormGroup>\r\n                        <Label>Last Name</Label>\r\n                        <span className=\"required\">*</span>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"last_name\"\r\n                          placeholder=\"Enter Last Name\"\r\n                          onChange={(e) => handleInputChange(e)}\r\n                          style={{ height: \"auto\" }}\r\n                          value={state.last_name || \"\"}\r\n                          className={classnames(\r\n                            \"form-control input\",\r\n                            {\r\n                              invalid: errors.error_last_name.length > 0,\r\n                            },\r\n                            {\r\n                              valid: errors.error_last_name.length === 0,\r\n                            }\r\n                          )}\r\n                        />\r\n                        {errors.error_last_name && (\r\n                          <span className=\"invalid-text \">\r\n                            {errors.error_last_name}\r\n                          </span>\r\n                        )}\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <FormGroup>\r\n                        <Label>Email</Label>\r\n                        <span className=\"required\">*</span>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"email\"\r\n                          placeholder=\"Enter Email\"\r\n                          onChange={(e) => handleInputChange(e)}\r\n                          style={{ height: \"auto\" }}\r\n                          value={state.email || \"\"}\r\n                          className={classnames(\r\n                            \"form-control input\",\r\n                            {\r\n                              invalid: errors.error_email.length > 0,\r\n                            },\r\n                            {\r\n                              valid: errors.error_email.length === 0,\r\n                            }\r\n                          )}\r\n                        />\r\n                        {errors.error_email && (\r\n                          <span className=\"invalid-text \">\r\n                            {errors.error_email}\r\n                          </span>\r\n                        )}\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <FormGroup>\r\n                        <Label>Password</Label>\r\n                        <span className=\"required\">*</span>\r\n                        <input\r\n                          type=\"password\"\r\n                          name=\"password\"\r\n                          placeholder=\"Enter Password\"\r\n                          onChange={(e) => handleInputChange(e)}\r\n                          style={{ height: \"auto\" }}\r\n                          value={state.password || \"\"}\r\n                          className={classnames(\r\n                            \"form-control input\",\r\n                            {\r\n                              invalid: errors.error_password.length > 0,\r\n                            },\r\n                            {\r\n                              valid: errors.error_password.length === 0,\r\n                            }\r\n                          )}\r\n                        />\r\n                        {errors.error_password && (\r\n                          <span className=\"invalid-text \">\r\n                            {errors.error_password}\r\n                          </span>\r\n                        )}\r\n                      </FormGroup>\r\n                    </Col>\r\n\r\n                    <Col md={6}>\r\n                      <FormGroup>\r\n                        <Label>Banner</Label>\r\n                        <span className=\"required\">*</span>\r\n                        <input\r\n                          id=\"image\"\r\n                          type=\"file\"\r\n                          accept=\"image/*\"\r\n                          capture=\"camera\"\r\n                          onChange={(e) => {\r\n                            handleFileChange(e);\r\n                          }}\r\n                          style={{ height: \"auto\" }}\r\n                          className={classnames(\r\n                            \"form-control py-1 my-0 image-picker-input\",\r\n                            {\r\n                              invalid: photoError.length > 0,\r\n                            },\r\n                            {\r\n                              valid: photoError.length === 0,\r\n                            }\r\n                          )}\r\n                        />\r\n                        {photoError.length > 0 && (\r\n                          <div className=\"w-100\">\r\n                            <span className=\"invalid-text \">{photoError}</span>\r\n                          </div>\r\n                        )}\r\n                        {imagePreview !== \"\" && (\r\n                          <img\r\n                            src={imagePreview}\r\n                            className=\"border-rounded\"\r\n                            alt=\"\"\r\n                            style={{\r\n                              width: \"400px\",\r\n                              height: \"200px\",\r\n                              objectFit: \"cover\",\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <FormGroup>\r\n                        <Label>Logo</Label>\r\n                        <input\r\n                          id=\"image\"\r\n                          type=\"file\"\r\n                          accept=\"image/*\"\r\n                          capture=\"camera\"\r\n                          onChange={(e) => {\r\n                            handleLogoChange(e);\r\n                          }}\r\n                          style={{ height: \"auto\" }}\r\n                          className={classnames(\r\n                            \"form-control py-1 my-0 image-picker-input\",\r\n                            {\r\n                              invalid: photoLogoError.length > 0,\r\n                            },\r\n                            {\r\n                              valid: photoLogoError.length === 0,\r\n                            }\r\n                          )}\r\n                        />\r\n                        {photoLogoError.length > 0 && (\r\n                          <div className=\"w-100\">\r\n                            <span className=\"invalid-text \">\r\n                              {photoLogoError}\r\n                            </span>\r\n                          </div>\r\n                        )}\r\n                        {logoPreview !== \"\" && (\r\n                          <img\r\n                            src={logoPreview}\r\n                            className=\"border-rounded\"\r\n                            alt=\"\"\r\n                            style={{\r\n                              width: \"200px\",\r\n                              height: \"200px\",\r\n                              objectFit: \"cover\",\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </FormGroup>\r\n                    </Col>\r\n\r\n                    <Col md={6}>\r\n                      <FormGroup>\r\n                        <Label>Address</Label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"address\"\r\n                          placeholder=\"Enter Address\"\r\n                          onChange={(e) => handleInputChange(e)}\r\n                          style={{ height: \"auto\" }}\r\n                          value={state.address || \"\"}\r\n                          className={classnames(\r\n                            \"form-control input\",\r\n                            {\r\n                              invalid: errors.error_address.length > 0,\r\n                            },\r\n                            {\r\n                              valid: errors.error_address.length === 0,\r\n                            }\r\n                          )}\r\n                        />\r\n                        {errors.error_address && (\r\n                          <span className=\"invalid-text \">\r\n                            {errors.error_address}\r\n                          </span>\r\n                        )}\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <FormGroup>\r\n                        <Label>About</Label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"about_us\"\r\n                          placeholder=\"Enter About us\"\r\n                          onChange={(e) => handleInputChange(e)}\r\n                          style={{ height: \"auto\" }}\r\n                          value={state.about_us || \"\"}\r\n                          className={classnames(\r\n                            \"form-control input\",\r\n                            {\r\n                              invalid: errors.error_about_us.length > 0,\r\n                            },\r\n                            {\r\n                              valid: errors.error_about_us.length === 0,\r\n                            }\r\n                          )}\r\n                        />\r\n                        {errors.error_about_us && (\r\n                          <span className=\"invalid-text \">\r\n                            {errors.error_about_us}\r\n                          </span>\r\n                        )}\r\n                      </FormGroup>\r\n                    </Col>\r\n\r\n                    <Col md=\"12\">\r\n                      <fieldset className=\"scheduler-border\">\r\n                        <legend className=\"scheduler-border\">Social:</legend>\r\n                        <Row>\r\n                          <Col md={6}>\r\n                            <FormGroup>\r\n                              <Label>Facebook</Label>\r\n                              <input\r\n                                type=\"url\"\r\n                                name=\"facebook\"\r\n                                placeholder=\"Enter Facebook\"\r\n                                onChange={(e) => handleInputChange(e)}\r\n                                style={{ height: \"auto\" }}\r\n                                value={state.facebook || \"\"}\r\n                                className={classnames(\r\n                                  \"form-control input\",\r\n                                  {\r\n                                    invalid: errors.error_facebook.length > 0,\r\n                                  },\r\n                                  {\r\n                                    valid: errors.error_facebook.length === 0,\r\n                                  }\r\n                                )}\r\n                              />\r\n                              {errors.error_facebook && (\r\n                                <span className=\"invalid-text \">\r\n                                  {errors.error_facebook}\r\n                                </span>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md={6}>\r\n                            <FormGroup>\r\n                              <Label>Instagram</Label>\r\n                              <input\r\n                                type=\"url\"\r\n                                name=\"instagram\"\r\n                                placeholder=\"Enter Instagram Url\"\r\n                                onChange={(e) => handleInputChange(e)}\r\n                                style={{ height: \"auto\" }}\r\n                                value={state.instagram || \"\"}\r\n                                className={classnames(\r\n                                  \"form-control input\",\r\n                                  {\r\n                                    invalid: errors.error_instagram.length > 0,\r\n                                  },\r\n                                  {\r\n                                    valid: errors.error_instagram.length === 0,\r\n                                  }\r\n                                )}\r\n                              />\r\n                              {errors.error_instagram && (\r\n                                <span className=\"invalid-text \">\r\n                                  {errors.error_instagram}\r\n                                </span>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md={6}>\r\n                            <FormGroup>\r\n                              <Label>Twitter</Label>\r\n                              <input\r\n                                type=\"url\"\r\n                                name=\"twitter\"\r\n                                placeholder=\"Enter Twitter Url\"\r\n                                onChange={(e) => handleInputChange(e)}\r\n                                style={{ height: \"auto\" }}\r\n                                value={state.twitter || \"\"}\r\n                                className={classnames(\r\n                                  \"form-control input\",\r\n                                  {\r\n                                    invalid: errors.error_twitter.length > 0,\r\n                                  },\r\n                                  {\r\n                                    valid: errors.error_twitter.length === 0,\r\n                                  }\r\n                                )}\r\n                              />\r\n                              {errors.error_twitter && (\r\n                                <span className=\"invalid-text \">\r\n                                  {errors.error_twitter}\r\n                                </span>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md={6}>\r\n                            <FormGroup>\r\n                              <Label>Linkdin</Label>\r\n                              <input\r\n                                type=\"url\"\r\n                                name=\"linkdin\"\r\n                                placeholder=\"Enter Linkdin Url\"\r\n                                onChange={(e) => handleInputChange(e)}\r\n                                style={{ height: \"auto\" }}\r\n                                value={state.linkdin || \"\"}\r\n                                className={classnames(\r\n                                  \"form-control input\",\r\n                                  {\r\n                                    invalid: errors.error_linkdin.length > 0,\r\n                                  },\r\n                                  {\r\n                                    valid: errors.error_linkdin.length === 0,\r\n                                  }\r\n                                )}\r\n                              />\r\n                              {errors.error_linkdin && (\r\n                                <span className=\"invalid-text \">\r\n                                  {errors.error_linkdin}\r\n                                </span>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md={6}>\r\n                            <FormGroup>\r\n                              <Label>Youtube</Label>\r\n                              <input\r\n                                type=\"url\"\r\n                                name=\"youtube\"\r\n                                placeholder=\"Enter Youtube Url\"\r\n                                onChange={(e) => handleInputChange(e)}\r\n                                style={{ height: \"auto\" }}\r\n                                value={state.youtube || \"\"}\r\n                                className={classnames(\r\n                                  \"form-control input\",\r\n                                  {\r\n                                    invalid: errors.error_youtube.length > 0,\r\n                                  },\r\n                                  {\r\n                                    valid: errors.error_youtube.length === 0,\r\n                                  }\r\n                                )}\r\n                              />\r\n                              {errors.error_youtube && (\r\n                                <span className=\"invalid-text\">\r\n                                  {errors.error_youtube}\r\n                                </span>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                      </fieldset>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col md=\"2\">\r\n                  <LaddaButton\r\n                    className=\"btn btnColor btn-brand w-100  btn-ladda\"\r\n                    loading={saveLoading}\r\n                    data-color=\"blue\"\r\n                    data-style={ZOOM_OUT}\r\n                    onClick={(e) => onSubmitForm(e)}\r\n                  >\r\n                    {_id ? \"Update\" : \"Save\"}\r\n                  </LaddaButton>\r\n                </Col>\r\n              </Row>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({});\r\nexport default connect(mapStateToProps, {\r\n  addNewUser,\r\n  updateUserDetails,\r\n  getUserDetailsById,\r\n})(AddUser);\r\n"],"sourceRoot":""}